# Use the latest LTS version of Node.js
FROM node:16-alpine as build
# Set the working directory inside the container
WORKDIR /app 
# Copy package.json and package-lock.json
COPY package*.json ./
# Install dependencies
RUN npm install
# Copy the rest of your application files
COPY . .

COPY . .
RUN npm run build

# Expose the port your app runs on
#EXPOSE 3000
# Define the command to run your app
#CMD ["npm", "start"]
FROM nginx:alpine

# Copiar configuraci√≥n personalizada de Nginx
COPY --from=build /app/build /usr/share/nginx/html
COPY ./nginx/default.conf /etc/nginx/conf.d/default.conf
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]


# Build Stage
#FROM node:18-alpine AS build
#WORKDIR /app
#COPY package*.json ./
#RUN npm install
#COPY . .
#RUN npm run build
# Production Stage
#FROM nginx:stable-alpine AS production
#COPY --from=build /app/build /usr/share/nginx/html
#EXPOSE 80
#CMD ["nginx", "-g", "daemon off;"]

#docker build -t my-react-app .
#docker build -t my-react-app-dev --target build .
#docker run -p 3000:3000 my-react-app-dev
#docker run -p 80:80 my-react-app
#http://localhost:3000 (for development)
#http://localhost (for production)